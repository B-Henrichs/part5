{"version":3,"sources":["components/Form.js","components/Blog.js","components/Search.js","components/Blogs.js","services/blogbook.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Form","addBlog","newTitle","handleTitleChange","newAuthor","handleAuthorChange","newUrl","handleUrlChange","newLikes","handleLikesChange","onSubmit","value","onChange","type","Blog","blog","removeEntry","title","author","url","likes","onClick","id","Search","props","newSearch","handleSearchChange","Blogs","blogsToShow","map","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","update","put","delete","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","style","className","errorNotification","App","useState","blogs","setBlogs","setNewTitle","setNewAuthor","setNewUrl","setNewLikes","setNewSearch","alertMessage","setAlertMessage","errorMessage","setErrorMessage","useEffect","blogService","initialBook","catch","error","setTimeout","filter","toLowerCase","includes","Error","event","target","preventDefault","item","toLocaleLowerCase","length","confirm","window","blogToUpdate","find","updatedBlog","n","updateBlog","blogObject","returnedBlog","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10ef07ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({addBlog, newTitle, handleTitleChange, newAuthor, handleAuthorChange, newUrl, handleUrlChange, newLikes, handleLikesChange}) => {\r\n  return (\r\n  <form onSubmit ={addBlog}>\r\n    <div>\r\n      title: <input \r\n        value={newTitle} \r\n        onChange={handleTitleChange}/>\r\n    </div>\r\n    <div>\r\n        author:<input \r\n        value={newAuthor}\r\n        onChange={handleAuthorChange}/>\r\n    </div>\r\n    <div>\r\n        url:<input \r\n        value={newUrl}\r\n        onChange={handleUrlChange}/>\r\n    </div>\r\n    <div>\r\n        likes:<input \r\n        value={newLikes}\r\n        onChange={handleLikesChange}/>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">update Blog list</button>\r\n    </div>\r\n  </form>\r\n    \r\n  )\r\n}\r\nexport default Form","import React from 'react'\r\nconst Blog = ({ blog, removeEntry }) => {\r\n  return (\r\n    <li>{blog.title} {blog.author} {blog.url} {blog.likes} <button onClick={removeEntry} value={blog.id}>Delete</button> </li>\r\n  )\r\n}\r\nexport default Blog","import React from 'react'\r\nconst Search = (props) => { \r\n    return(\r\n        <div>\r\n        search:<input value={props.newSearch} onChange={props.handleSearchChange} />\r\n        </div>\r\n            )\r\n        }\r\nexport default Search","import React from 'react'\r\n\r\nconst Blogs = ({Blog, blogsToShow, removeEntry}) => {  \r\n    //returns layout and uses map method on array returned with search filter(if any)\r\n    //map function takes intrustions from Person component\r\n    return(  \r\n        <div>\r\n            <h2>Blogs</h2>        \r\n                <ul>\r\n                    {blogsToShow.map(blog =>\r\n                        <Blog key={blog.title} blog={blog} removeEntry={removeEntry}/>    \r\n                        )}\r\n                </ul>\r\n      </div>\r\n)}\r\nexport default Blogs","import axios from 'axios'\r\n\r\n//sets location to pull from\r\nconst baseUrl = '/api/blogs'\r\n\r\n//first pass sets base phonebook from json server\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)  \r\n}\r\n\r\n//adding an entry\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n//changing a number of an existing entry\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n//deletes entry\r\nconst removeEntry = (blog) =>{\r\n  const request =axios.delete(`${baseUrl}/${blog}`)\r\n    return( request)\r\n    .then(response => response.data)\r\n  }\r\n\r\nconst services = {\r\n  getAll, create, update, removeEntry\r\n}\r\n\r\nexport default services","import React from 'react'\r\n\r\nconst notificationStyle = {\r\ncolor: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10,\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={notificationStyle} className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React from 'react'\r\n\r\nconst notificationStyle = {\r\ncolor: 'red',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10,\r\n}\r\n\r\nconst errorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={notificationStyle} className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default errorNotification","//import react + components\r\nimport React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport Blog from './components/Blog'\r\nimport Search from './components/Search'\r\nimport Blogs from './components/Blogs'\r\nimport blogService from './services/blogbook'\r\nimport Notification from './components/Notification'\r\nimport Error from './components/Error'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  //establishes states\r\n  const [ blogs, setBlogs ] = useState([]) \r\n  const [ newTitle, setNewTitle ] = useState('')\r\n  const [ newAuthor, setNewAuthor ] = useState('')\r\n  const [ newUrl, setNewUrl ] = useState('')\r\n  const [ newLikes, setNewLikes ] = useState('')\r\n  const [ newSearch, setNewSearch] = useState('')\r\n  const [alertMessage, setAlertMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  //use axios to get import db.json file requires json server to be run\r\n  useEffect(() => {\r\n   blogService\r\n      .getAll()\r\n      .then(initialBook => {\r\n        setBlogs(initialBook)     \r\n  }).catch(error =>{\r\n    setErrorMessage(\r\n      `unable to connect to server`\r\n    )\r\n    setTimeout(() => {\r\n      setErrorMessage(null)\r\n    }, 5000)\r\n  })\r\n  }, [])\r\n \r\n\r\n\r\n//handles button click when the title field is a new value\r\n  const addBlog = () => {\r\n    \r\n    // blog generated from  entry fields\r\n    const blogObject = {\r\n      title: newTitle,\r\n      author: newAuthor,  \r\n      url: newUrl,\r\n      likes: newLikes\r\n    }\r\n   \r\n      //use axios to add blog to to blogs state array\r\n       blogService\r\n      .create(blogObject)\r\n      .then( returnedBlog => {\r\n        setAlertMessage(\r\n          `Added ${returnedBlog.title} to the server`\r\n        )\r\n        setTimeout(() => {\r\n          setAlertMessage(null)\r\n        }, 5000)\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setNewTitle('')\r\n        setNewAuthor('') \r\n        setNewUrl('')\r\n        setNewLikes('')\r\n    })\r\n    .catch(error => {\r\n      console.log(\"error:\",error.response.data.error)\r\n      setErrorMessage(\r\n        error.response.data.error||`unable to connect to server`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    })\r\n    \r\n  }\r\n\r\n\r\n//handles button click when title field is an existing value\r\n  const updateBlog = () => {\r\n\r\n    // asks user if this is what they ment to do\r\n    const confirm = window.confirm(\r\n      `${newTitle} is already added to blog list, replace the old blog entry with new one?`\r\n    );\r\n\r\n    // uses find method on blogs array to match change with existing entry \r\n    const blogToUpdate = blogs.find((item) => item.title === newTitle)\r\n    ;\r\n    //uses copy method to return a new object with old title and new other info\r\n    const updatedBlog = { ...blogToUpdate, author: newAuthor, url: newUrl, likes: newLikes };\r\n\r\n    //only executes if user selects \"ok\" in prompt window\r\n    if (confirm) {\r\n\r\n      //axios put method to update the server\r\n      blogService\r\n        .update(updatedBlog.id, updatedBlog)\r\n        .then((response) => {\r\n          setAlertMessage(\r\n            `Updated ${updatedBlog.title}'s entry`\r\n          )\r\n          setTimeout(() => {\r\n            setAlertMessage(null)\r\n          }, 5000)\r\n\r\n          //takes response from json server and alters state array, returns identical\r\n          //object if id does not match. if the id does match alter object to be response\r\n          setBlogs(blogs.map((item) => (item.id === response.id ? response : item)))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `'${updatedBlog.title}' was removed by another user`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setBlogs(blogs.filter(n => n.id !== updatedBlog.id))     \r\n      })\r\n      }\r\n  }\r\n\r\n//handles delete button click\r\nconst removeEntry = (event) => {\r\n  event.preventDefault()\r\n const id = event.target.value\r\n //when called promts user\r\n const confirm = window.confirm(\"are you sure?\")\r\n // finds the blog to update\r\n const blogToUpdate = blogs.find((item) => item.id === id)\r\n\r\n //check to see if the user confirms in the prompt window\r\n if (confirm){\r\n\r\n  //calls axios delete method to remove the blog from the json database\r\n  blogService\r\n    .removeEntry(blogToUpdate.id)\r\n    .then( response => {\r\n      console.log(blogToUpdate.title)\r\n      setAlertMessage(\r\n        `Deleted ${blogToUpdate.title}'s entry`\r\n      )\r\n      setTimeout(() => {\r\n        setAlertMessage(null)\r\n      }, 5000)\r\n\r\n      //uses filter method on blogs state array to return a new array without the removed entry\r\n      setBlogs(blogs.filter(n => n.id !== id))\r\n    })\r\n    .catch(error => {\r\n      setErrorMessage(\r\n        `'${blogs[id-1].title}' was removed by another user`\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n      setBlogs(blogs.filter(n => n.id !== blogs[id-1].id))     \r\n    })\r\n}}\r\n\r\n\r\n  //decides which function to call when the button is pressed \r\n  //depending on if the title is a new value or not\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // uses filter method on blogs array and creates a new array of blogs\r\n    //match the title field.\r\n    const isBlogExist = blogs.filter(\r\n      (item) => item.title.toLocaleLowerCase() === newTitle.toLowerCase()\r\n    ).length;\r\n\r\n      //if the isblogExist array is empty then the title field\r\n      //does not match any existing values, add the blog\r\n    if (!isBlogExist) {\r\n      addBlog();\r\n\r\n      //otherwise update the entry\r\n    } else {\r\n      updateBlog();\r\n    }\r\n\r\n    //reset the entry fields\r\n        setNewTitle('')\r\n        setNewAuthor('')\r\n        setNewUrl('')\r\n        setNewLikes('')\r\n  };\r\n\r\n\r\n    \r\n    \r\n    \r\n  \r\n  //these change the fields when user types\r\n  const handleTitleChange = (event) => {\r\n   setNewTitle(event.target.value)\r\n  }\r\n  const handleAuthorChange = (event) => {\r\n  setNewAuthor(event.target.value)\r\n  }\r\n  const handleUrlChange = (event) => {\r\n  setNewUrl(event.target.value)\r\n  }\r\n  const handleLikesChange = (event) => {\r\n    setNewLikes(event.target.value)\r\n    }\r\n\r\n\r\n\r\n  const handleSearchChange = (event) => {\r\n  setNewSearch(event.target.value)\r\n  }\r\n\r\n\r\n  \r\n  //filters the blogs array to only display entrys that match the search field\r\n  const blogsToShow =  blogs.filter(blog => blog.title.toLowerCase().includes(newSearch) === true)\r\n    \r\n  \r\n  return (\r\n\r\n      //layout and call components\r\n    <div>\r\n      <h1>Blog List</h1>\r\n      <Error message= {errorMessage}/>\r\n      <Notification message={alertMessage} />\r\n      \r\n      <h3>Search</h3>\r\n      <Search newSearch={newSearch} handleSearchChange={handleSearchChange} />\r\n      <h3>Update Blog List</h3>\r\n      <Form addBlog={handleFormSubmit} newTitle={newTitle} handleTitleChange={handleTitleChange} newAuthor={newAuthor} handleAuthorChange={handleAuthorChange} newUrl={newUrl}\r\n      handleUrlChange={handleUrlChange} newLikes={newLikes} handleLikesChange={handleLikesChange}/>\r\n      <Blogs blogsToShow={blogsToShow} Blog={Blog} removeEntry={removeEntry}/>\r\n     \r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}